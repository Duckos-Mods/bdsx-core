<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="ReleaseTest|x64">
      <Configuration>ReleaseTest</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <ProjectGuid>{31964E2C-9E3D-4C98-A17B-589E322AA174}</ProjectGuid>
    <RootNamespace>chakraX</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>false</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\ken\KR.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\ken\KR.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="..\..\ken\KR.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LibraryPath>$(SolutionDir)node-chakracore\$(ConfigDir)\lib;$(LibraryPath)</LibraryPath>
    <TargetName>Chakra</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LibraryPath>$(SolutionDir)node-chakracore\$(ConfigDir)\lib;$(LibraryPath)</LibraryPath>
    <TargetName>Chakra</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">
    <LibraryPath>$(SolutionDir)node-chakracore\$(ConfigDir)\lib;$(LibraryPath)</LibraryPath>
    <TargetName>Chakra</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile />
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent />
    <ClCompile />
    <PreBuildEvent>
      <Command>mkdir gen&gt;nul 2&gt;nul
set errorlevel=0
set time2=%time::=%
echo #define BUILD_TIME "%25date%-%time2:.=%"&gt;"gen/buildtime.h"</Command>
    </PreBuildEvent>
    <ClCompile />
    <PostBuildEvent />
    <PostBuildEvent />
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile />
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent>
      <Command>call ksign "BDSX"  "$(TargetPath)"</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>mkdir gen&gt;nul 2&gt;nul
set errorlevel=0
set time2=%time::=%
echo #define BUILD_TIME "%25date%-%time2:.=%"&gt;"gen/buildtime.h"</Command>
    </PreBuildEvent>
    <ClCompile />
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">
    <ClCompile />
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent />
    <PostBuildEvent />
    <PreBuildEvent>
      <Command>mkdir gen&gt;nul 2&gt;nul
set errorlevel=0
set time2=%time::=%
echo #define BUILD_TIME "%25date%-%time2:.=%"&gt;"gen/buildtime.h"</Command>
    </PreBuildEvent>
    <ClCompile />
    <PostBuildEvent />
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="forward.cpp" />
    <ClCompile Include="mtqueue.cpp" />
    <ClCompile Include="uvasync.cpp" />
    <ClCompile Include="structurepointer.cpp" />
    <ClCompile Include="cachedpdb.cpp" />
    <ClCompile Include="iatdll.cpp" />
    <ClCompile Include="encoding.cpp" />
    <ClCompile Include="sehandler.cpp" />
    <ClCompile Include="voidpointer.cpp" />
    <ClCompile Include="jshook.cpp" />
    <ClCompile Include="makefunc.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="jsctx.cpp" />
    <ClCompile Include="nativepointer.cpp" />
    <ClCompile Include="netfilter.cpp" />
    <ClCompile Include="nodegate.cpp">
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">..\node-chakracore\src;..\node-chakracore\deps\chakrashim\include;..\node-chakracore\deps\chakrashim;..\node-chakracore\deps\icu-small\source\i18n;..\node-chakracore\deps\icu-small\source\common;..\node-chakracore\deps\zlib;..\node-chakracore\deps\http_parser;..\node-chakracore\deps\cares\include;..\node-chakracore\deps\uv\include;..\node-chakracore\deps\nghttp2\lib\includes;..\node-chakracore\deps\openssl\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">..\node-chakracore\src;..\node-chakracore\deps\chakrashim\include;..\node-chakracore\deps\chakrashim;..\node-chakracore\deps\icu-small\source\i18n;..\node-chakracore\deps\icu-small\source\common;..\node-chakracore\deps\zlib;..\node-chakracore\deps\http_parser;..\node-chakracore\deps\cares\include;..\node-chakracore\deps\uv\include;..\node-chakracore\deps\nghttp2\lib\includes;..\node-chakracore\deps\openssl\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalIncludeDirectories Condition="'$(Configuration)|$(Platform)'=='Release|x64'">..\node-chakracore\src;..\node-chakracore\deps\chakrashim\include;..\node-chakracore\deps\chakrashim;..\node-chakracore\deps\icu-small\source\i18n;..\node-chakracore\deps\icu-small\source\common;..\node-chakracore\deps\zlib;..\node-chakracore\deps\http_parser;..\node-chakracore\deps\cares\include;..\node-chakracore\deps\uv\include;..\node-chakracore\deps\nghttp2\lib\includes;..\node-chakracore\deps\openssl\openssl\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <ClCompile Include="staticpointer.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="mtqueue.h" />
    <ClInclude Include="uvasync.h" />
    <ClInclude Include="structurepointer.h" />
    <ClInclude Include="cachedpdb.h" />
    <ClInclude Include="iatdll.h" />
    <ClInclude Include="encoding.h" />
    <ClInclude Include="sehandler.h" />
    <ClInclude Include="voidpointer.h" />
    <ClInclude Include="jshook.h" />
    <ClInclude Include="makefunc.h" />
    <ClInclude Include="jsctx.h" />
    <ClInclude Include="nativepointer.h" />
    <ClInclude Include="netfilter.h" />
    <ClInclude Include="nodegate.h" />
    <ClInclude Include="staticpointer.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="stdafx.h" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\ken\KR3\KR3.vcxproj">
      <Project>{f5212e7b-4791-4488-a23a-57af3023e7d3}</Project>
    </ProjectReference>
    <ProjectReference Include="..\..\ken\KRWin\KRWin.vcxproj">
      <Project>{432cc3c8-34b1-405d-9675-36fdf25289c7}</Project>
    </ProjectReference>
    <ProjectReference Include="..\node-chakracore-build\node-chakracore-build.vcxproj">
      <Project>{cf64aea3-4836-4179-baa4-bfac5f505fb1}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="bdsx.rc" />
  </ItemGroup>
  <ItemGroup>
    <MASM Include="getout.asm" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="version.bat">
      <FileType>Document</FileType>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">gen\version.h;$(SolutionDir)..\bdsx\bdsx\version.json</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">gen\version.h;$(SolutionDir)..\bdsx\bdsx\version.json</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">gen\version.h;$(SolutionDir)..\bdsx\bdsx\version.json</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">@call "%(Identity)"

@set resver=%25BDSX_CORE_VERSION:.=,% 
@echo #define BDSX_CORE_VERSION "%25BDSX_CORE_VERSION%"&gt;gen\version.h
@echo #define BDSX_CORE_VERSION_RES %resver%&gt;&gt;gen\version.h
@echo {"coreVersion":"%25BDSX_CORE_VERSION%"}&gt;"$(SolutionDir)..\bdsx\bdsx\version.json"
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">@call "%(Identity)"

@set resver=%25BDSX_CORE_VERSION:.=,% 
@echo #define BDSX_CORE_VERSION "%25BDSX_CORE_VERSION%"&gt;gen\version.h
@echo #define BDSX_CORE_VERSION_RES %resver%&gt;&gt;gen\version.h
@echo {"coreVersion":"%25BDSX_CORE_VERSION%"}&gt;"$(SolutionDir)..\bdsx\bdsx\version.json"
</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">@call "%(Identity)"

@set resver=%25BDSX_CORE_VERSION:.=,% 
@echo #define BDSX_CORE_VERSION "%25BDSX_CORE_VERSION%"&gt;gen\version.h
@echo #define BDSX_CORE_VERSION_RES %resver%&gt;&gt;gen\version.h
@echo {"coreVersion":"%25BDSX_CORE_VERSION%"}&gt;"$(SolutionDir)..\bdsx\bdsx\version.json"
</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(identity)</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='ReleaseTest|x64'">%(identity)</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(identity)</Message>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\masm.targets" />
    <Import Project="..\packages\Microsoft.ChakraCore.vc140.1.11.24\build\native\Microsoft.ChakraCore.vc140.targets" Condition="Exists('..\packages\Microsoft.ChakraCore.vc140.1.11.24\build\native\Microsoft.ChakraCore.vc140.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Microsoft.ChakraCore.vc140.1.11.24\build\native\Microsoft.ChakraCore.vc140.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Microsoft.ChakraCore.vc140.1.11.24\build\native\Microsoft.ChakraCore.vc140.targets'))" />
  </Target>
</Project>